{"ast":null,"code":"const _apiUrl = \"/api/patrons\";\n\n// Get patrons\nexport const getPatrons = () => {\n  return fetch(_apiUrl).then(r => r.json());\n};\n\n// Get a single patron\nexport const getPatron = id => {\n  return fetch(`${_apiUrl}/${id}`).then(r => r.json());\n};\n\n// Update a patrons details\nexport const updatePatron = team => {\n  return fetch(`_apiUrl/${team.id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(team)\n  }).then(response => response.json());\n};","map":{"version":3,"names":["_apiUrl","getPatrons","fetch","then","r","json","getPatron","id","updatePatron","team","method","headers","body","JSON","stringify","response"],"sources":["/Users/jeffreyweisel/workspace/csharp/LoncotesLibraryClient/dotnet-loncotes-client/src/data/patronsData.js"],"sourcesContent":["const _apiUrl = \"/api/patrons\";\n\n// Get patrons\nexport const getPatrons = () => {\n    return fetch(_apiUrl).then((r) => r.json());\n  };\n\n// Get a single patron\nexport const getPatron = (id) => {\n    return fetch(`${_apiUrl}/${id}`).then((r) => r.json());\n  };\n\n// Update a patrons details\nexport const updatePatron = (team) => {\n  return fetch(`_apiUrl/${team.id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(team),\n  }).then((response) => response.json());\n};"],"mappings":"AAAA,MAAMA,OAAO,GAAG,cAAc;;AAE9B;AACA,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAC5B,OAAOC,KAAK,CAACF,OAAO,CAAC,CAACG,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;AAC7C,CAAC;;AAEH;AACA,OAAO,MAAMC,SAAS,GAAIC,EAAE,IAAK;EAC7B,OAAOL,KAAK,CAAE,GAAEF,OAAQ,IAAGO,EAAG,EAAC,CAAC,CAACJ,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;AACxD,CAAC;;AAEH;AACA,OAAO,MAAMG,YAAY,GAAIC,IAAI,IAAK;EACpC,OAAOP,KAAK,CAAE,WAAUO,IAAI,CAACF,EAAG,EAAC,EAAE;IACjCG,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;EAC3B,CAAC,CAAC,CAACN,IAAI,CAAEY,QAAQ,IAAKA,QAAQ,CAACV,IAAI,CAAC,CAAC,CAAC;AACxC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}